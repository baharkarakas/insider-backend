services:
  db:
    image: postgres:16
    container_name: insider-db
    environment:
      POSTGRES_DB: insider
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 2s
      timeout: 2s
      retries: 15
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: insider-redis
    ports:
      - "6379:6379"
    restart: unless-stopped

  migrator:
    image: migrate/migrate:4
    container_name: insider-migrator
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./internal/db/migrations:/migrations:ro
    command:
      [
        "-path",
        "/migrations",
        "-database",
        "postgres://postgres:postgres@db:5432/insider?sslmode=disable",
        "up",
      ]
    restart: on-failure

  app:
    build: .
    container_name: insider-app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      migrator:
        condition: service_started
    env_file:
      - .env
    environment:
      APP_ENV: ${APP_ENV}
      HTTP_PORT: ${HTTP_PORT}
      DATABASE_URL: ${DATABASE_URL}
      JWT_ACCESS_SECRET: ${JWT_ACCESS_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      JWT_ISSUER: ${JWT_ISSUER}
      JWT_ACCESS_TTL: ${JWT_ACCESS_TTL}
      JWT_REFRESH_TTL: ${JWT_REFRESH_TTL}
    ports:
      - "8080:8080"
    command: ["/app/api"]
    restart: on-failure

volumes:
  pgdata: {}
